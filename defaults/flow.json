[{"id":"fae669a6.10f98","type":"http in","z":"a489267c.ceed7","name":"","url":"/candy","method":"post","swaggerDoc":"","x":233.36668395996094,"y":344.36669921875,"wires":[["2f34d6e6.7d89e2","71df9d2f.bf678c"]]},{"id":"2f34d6e6.7d89e2","type":"change","z":"a489267c.ceed7","name":"","rules":[{"t":"set","p":"payload","to":"\"\""},{"t":"set","p":"statusCode","to":"204"}],"action":"","property":"","from":"","to":"","reg":false,"x":562.36669921875,"y":342.63336181640625,"wires":[["57405f5d.615e9"]]},{"id":"57405f5d.615e9","type":"http response","z":"a489267c.ceed7","name":"OK","x":783.36669921875,"y":342.63336181640625,"wires":[]},{"id":"71df9d2f.bf678c","type":"json","z":"a489267c.ceed7","name":"","x":405.2333984375,"y":251.5,"wires":[["63e39f99.e3f218"]]},{"id":"63e39f99.e3f218","type":"mqtt out","z":"a489267c.ceed7","name":"","topic":"<topic-name-that-you-defined>","qos":"0","retain":"false","broker":"9d121d84.bee988","x":649.2333984375,"y":251.8333282470703,"wires":[]},{"id":"a7e49be0.2636e","type":"inject","z":"a489267c.ceed7","name":"Positive test","topic":"","payload":"{\"text\":\"p\"}","payloadType":"json","repeat":"","crontab":"","once":false,"x":204.23338317871094,"y":206.63333129882812,"wires":[["71df9d2f.bf678c"]]},{"id":"d6a478a1.10e01","type":"inject","z":"a489267c.ceed7","name":"Negative test","topic":"","payload":"{\"text\":\"n\"}","payloadType":"json","repeat":"","crontab":"","once":false,"x":205.2333221435547,"y":251.63333129882812,"wires":[["71df9d2f.bf678c"]]},{"id":"f758f57.187c408","type":"http in","z":"a489267c.ceed7","name":"","url":"/candylog","method":"post","swaggerDoc":"","x":226.2333221435547,"y":445.70001220703125,"wires":[["2f34d6e6.7d89e2","3228d2a1.32a7a6"]]},{"id":"3228d2a1.32a7a6","type":"cloudant out","z":"a489267c.ceed7","name":"","cloudant":"","database":"candylogs","service":"nodeREDCloudantNoSQLDB","payonly":true,"operation":"insert","x":549.2333984375,"y":444.63336181640625,"wires":[]},{"id":"46f2e43a.d03b1c","type":"http in","z":"a489267c.ceed7","name":"","url":"/candyreport","method":"get","swaggerDoc":"","x":103.23333740234375,"y":638.9000244140625,"wires":[["4cd8b78a.e177e"]]},{"id":"678367bc.a0c658","type":"http request","z":"a489267c.ceed7","name":"Get events","method":"GET","ret":"obj","url":"","tls":"","x":537.4000244140625,"y":638.2999877929688,"wires":[["1b0ca51.b09c2db"]]},{"id":"6bffa9dc.6dd168","type":"template","z":"a489267c.ceed7","name":"Event HTML page","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://fonts.googleapis.com/css?family=Pompiere|VT323|Montserrat\">\n<link rel=\"stylesheet\" href=\"css/report.css\">\n<h1>Watson Candy Machine dashboard</h1>\n<div align=center>\n    <p>Select your event</p>\n    <form action=\"/candyreport\" method=\"POST\">\n        <select name = \"selectEvent\" id=\"selectEvent\" onchange=\"this.form.submit()\">>\n            <option value=\"empty\" selected/>\n        {{#payload.rows}}\n            <option value=\"{{key}}\">{{key}}</option>\n        {{/payload.rows}}\n        </select>\n    </form>\n</div>    ","x":976.4500732421875,"y":639.449951171875,"wires":[["6020faf8.b47924"]]},{"id":"6020faf8.b47924","type":"http response","z":"a489267c.ceed7","name":"","x":1174.64990234375,"y":639.8499755859375,"wires":[]},{"id":"1b0ca51.b09c2db","type":"function","z":"a489267c.ceed7","name":"set headers","func":"msg.headers = {\"Content-Type\": \"text/html; charset=utf-8\"};\n\nreturn msg;","outputs":1,"noerr":0,"x":746.6500244140625,"y":638.8499755859375,"wires":[["6bffa9dc.6dd168"]]},{"id":"cb9c8116.b6f88","type":"http in","z":"a489267c.ceed7","name":"","url":"/candyreport","method":"post","swaggerDoc":"","x":101.39999389648438,"y":842.7666320800781,"wires":[["4d92a26a.ba7214"]]},{"id":"4d92a26a.ba7214","type":"function","z":"a489267c.ceed7","name":"get event","func":"global.set(\"trigger\", true);\n\nif (typeof msg.req !== 'undefined') {\n    global.set(\"selectEvent\", msg.req.body.selectEvent);\n    global.set(\"trigger\", false);\n}\n\nmsg.topic = global.get(\"selectEvent\");\n\nreturn msg;","outputs":1,"noerr":0,"x":295.4000244140625,"y":842.9999694824219,"wires":[["ecc68ac4.97a69"]]},{"id":"329b5efb.a35ba2","type":"http request","z":"a489267c.ceed7","name":"Get negative results","method":"GET","ret":"obj","url":"","tls":"","x":915.8499755859375,"y":803.4499816894531,"wires":[["82bbc55a.542f7"]]},{"id":"82bbc55a.542f7","type":"function","z":"a489267c.ceed7","name":"","func":"msg.headers = {\"Content-Type\": \"text/html; charset=utf-8\"};\n\nif (typeof msg.payload.rows !== 'undefined') {\n    if (msg.payload.rows.length === 0) {\n        msg.payload.neg_average = 0;\n        msg.payload.neg_min_value = 0;\n    } else {    \n        msg.payload.neg_min_value = msg.payload.rows[0].value.min;\n        msg.payload.neg_average   = msg.payload.rows[0].value.sum/msg.payload.rows[0].value.count;\n        msg.payload.neg_average   = Math.abs(msg.payload.neg_average)*100;\n    }    \n} else {\n    msg.payload.neg_average = 0;\n    msg.payload.neg_min_value = 0;\n}\n\n\nvar msg2 = {\"payload\":\"\"};\nmsg2.req = msg.req;\nmsg2.res = msg.res\nmsg2.topic = msg.topic;\nmsg2.payload = \"score:\\\\\" + msg.payload.neg_min_value;\n\nreturn [msg,msg2];","outputs":"2","noerr":0,"x":1122.4000244140625,"y":803.3999938964844,"wires":[["1d52a548.b849e3"],["56777ad0.47f4b4"]]},{"id":"b73a4f02.db26d","type":"http response","z":"a489267c.ceed7","name":"","x":1592.3998413085938,"y":1107.5832214355469,"wires":[]},{"id":"d2dd73d0.66aa48","type":"template","z":"a489267c.ceed7","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<html>\n\n<head>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://fonts.googleapis.com/css?family=Pompiere|VT323\">\n    <link rel=\"stylesheet\" href=\"css/report.css\">\n    <title>Candy Machine Dashboard</title>\n    <script>\n        var CANV_GAUGE_FONTS_PATH = '/js/fonts'\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"candyreport\",\"ws/candyreport\");\n        \n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            ws.binaryType = \"arraybuffer\";\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = JSON.parse(msg.data);\n                console.log('Data: ' + JSON.stringify(data));\n                \n                var neg_gauge = new Gauge({ \n                    renderTo: 'gauge0',\n                    width: 300,\n                    height: 300,\n                    title: 'Negative',\n                    units: 'avg. score (%)',\n                    highlights: [{from: 20, to: 40, color: '#ffffff'},{from: 40, to: 60, color: '#ff9999'},\n                    {from: 60, to: 80, color: '#ff6666'},{from: 80, to: 100, color: '#9f2e2e'}]\n                });\n                \n                var pos_gauge = new Gauge({ \n                    renderTo: 'gauge1',\n                    width: 300,\n                    height: 300,\n                    title: 'Positive',\n                    units: 'avg. score (%)',\n                    highlights: [{from: 20, to: 40, color: '#cde7b7'},{from: 40, to: 60, color: '#97d166'},\n                    {from: 60, to: 80, color: '#339966'},{from: 80, to: 100, color: '#006633'}]\n                });\n                \n                // now handle initial gauge draw with onready event\n                neg_gauge.onready = function() {\n                    // and do update of gauge value each second with the random value\n                    neg_gauge.setValue( data.neg_average );\n                };\n                \n                // draw the gauge\n                neg_gauge.draw();\n                \n                pos_gauge.onready = function() {\n                    // and do update of gauge value each second with the random value\n                    pos_gauge.setValue( data.pos_average );\n                };\n                \n                // draw the gauge\n                pos_gauge.draw();\n                \n                document.getElementById('pos_text').innerHTML = 'Most positive text: \\\"<span><b>' + data.pos_max_text + '</b></span>\\\" with score: <span><b>' + data.pos_max_value + '</b></span>';\n                document.getElementById('neg_text').innerHTML = 'Most negative text: \\\"<span><b>' + data.neg_min_text + '</b></span>\\\" with score: <span><b>' + data.neg_min_value + '</b></span>';\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').setAttribute('class', 'connected');\n                document.getElementById('status').innerHTML = \"&nbsp;connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').setAttribute('class', 'disconnected');\n                document.getElementById('status').innerHTML = \"&nbsp;not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }    \n    </script>\n    <script src=\"/js/gauge.min.js\"></script>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n</head>\n\n<body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n    <!-- Start Example -->\n    <h1>Dashboard for \"{{topic}}\"</h1>\n    <div id=\"messages\"></div>\n    <div id=\"gauges\" align=\"center\">\n        <canvas id=\"gauge0\" width=\"300\" height=\"300\" data-type=\"canv-gauge\" data-title=\"Negative\" data-units=\"avg. score (%)\" data-highlights=\"0 20 #ffffff, 20 40 #ffdbd9, 40 60 #ff9999, 60 80 #ff6666, 80 100 #9f2e2e\" data-value=\"{{payload.neg_average}}\"></canvas>\n        <canvas id=\"gauge1\" width=\"300\" height=\"300\" data-type=\"canv-gauge\" data-title=\"Positive\" data-units=\"avg. score (%)\" data-highlights=\"0 20 #ffffff, 20 40 #cde7b7, 40 60 #97d166, 60 80 #339966, 80 100 #006633\" data-value=\"{{payload.pos_average}}\"></canvas>\n    </div>\n\n\n\n    <div align=\"center\">\n        <h2 class=\"highscore\"><u>High Scores</u></h2>\n        <p id=\"pos_text\" class=\"pos_text\">Most positive text: \"<span><b>{{payload.pos_max_text}}</b></span>\" with score: <span><b>{{payload.pos_max_value}}</b></span> </p>\n        <p id=\"neg_text\" class=\"neg_text\">Most negative text: \"<span><b>{{payload.neg_min_text}}</b></span>\" with score: <span><b>{{payload.neg_min_value}}</b></span> </p>\n    </div>\n    <div id=\"status\" color=\"red\">unknown</div>\n</body>\n\n</html>","x":1439.8499145507812,"y":1107.4499206542969,"wires":[["b73a4f02.db26d"]]},{"id":"4b4b3be9.0b241c","type":"http request","z":"a489267c.ceed7","name":"Get positive results","method":"GET","ret":"obj","url":"","tls":"","x":906.550048828125,"y":872.0498962402344,"wires":[["fdf3f33e.38c67"]]},{"id":"fdf3f33e.38c67","type":"function","z":"a489267c.ceed7","name":"","func":"msg.headers = {\"Content-Type\": \"text/html; charset=utf-8\"};\n\nvar msg2 = {\"payload\":\"\"};\nmsg2.req = msg.req;\nmsg2.res = msg.res\nmsg2.topic = msg.topic;\n\n\nif (typeof msg.payload.rows !== 'undefined') {\n    if (msg.payload.rows.length === 0) {\n        msg.payload.pos_average = 0;\n        msg.payload.pos_max_value = 0;\n    } else {\n        msg.payload.pos_max_value = msg.payload.rows[0].value.max;\n        msg.payload.pos_average   = msg.payload.rows[0].value.sum/msg.payload.rows[0].value.count;\n        msg.payload.pos_average   = Math.abs(msg.payload.pos_average)*100;\n        msg2.payload = \"score:\" + msg.payload.rows[0].value.max;\n    }    \n} else {\n    msg.payload.pos_average = 0;\n    msg.payload.pos_max_value = 0;\n}\n\n\nreturn [msg,msg2];","outputs":"2","noerr":0,"x":1105.550048828125,"y":872.0499572753906,"wires":[["1d52a548.b849e3"],["1f45a4a3.157643"]]},{"id":"1d52a548.b849e3","type":"join","z":"a489267c.ceed7","name":"","mode":"custom","build":"merged","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","timeout":"","count":"4","x":1067.4000854492188,"y":1037.7999572753906,"wires":[["bfdeb1af.af9788","b4e7b689.84957"]]},{"id":"bfdeb1af.af9788","type":"debug","z":"a489267c.ceed7","name":"","active":false,"console":"false","complete":"payload","x":1146.39990234375,"y":1099.2831726074219,"wires":[]},{"id":"10bcaf41.1a6b71","type":"function","z":"a489267c.ceed7","name":"","func":"msg.headers = {\"Content-Type\": \"text/html; charset=utf-8\"};\n\nvar result_text;\n\nif (msg.payload !== null) {\n    console.log('Length of neg. payload: ' + msg.payload.length);\n    if (msg.payload.length >= 1 ) {\n        result_text = msg.payload[0].text;\n        msg.payload = {};\n        msg.payload.neg_min_text = result_text;\n    } else {\n        msg.payload = {'neg_min_text': ''};\n    }\n} else {\n    msg.payload = {'neg_min_text': ''};\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1468.4000244140625,"y":809.7998962402344,"wires":[["1d52a548.b849e3"]]},{"id":"56777ad0.47f4b4","type":"cloudant in","z":"a489267c.ceed7","name":"Search score","cloudant":"","database":"candylogs","service":"nodeREDCloudantNoSQLDB","search":"_idx_","design":"myDesignDoc","index":"searchScore","x":1298.4000244140625,"y":809.8332824707031,"wires":[["10bcaf41.1a6b71"]]},{"id":"1f45a4a3.157643","type":"cloudant in","z":"a489267c.ceed7","name":"Search score","cloudant":"","database":"candylogs","service":"nodeREDCloudantNoSQLDB","search":"_idx_","design":"myDesignDoc","index":"searchScore","x":1298.050048828125,"y":878.0499572753906,"wires":[["ac1d0334.9e1b4"]]},{"id":"ac1d0334.9e1b4","type":"function","z":"a489267c.ceed7","name":"","func":"msg.headers = {\"Content-Type\": \"text/html; charset=utf-8\"};\n\nvar result_text;\n\nif (msg.payload !== null) {\n    if (msg.payload.length >= 1 ) {\n        result_text = msg.payload[0].text;\n        msg.payload = {};\n        msg.payload.pos_max_text = result_text;\n    } else {\n        msg.payload = { 'pos_max_text': ''};\n    }    \n} else {\n    msg.payload = { 'pos_max_text': ''};\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1470.0501098632812,"y":878.0499572753906,"wires":[["1d52a548.b849e3"]]},{"id":"7cabdff3.8753d8","type":"inject","z":"a489267c.ceed7","name":"Trigger update","topic":"","payload":"true","payloadType":"bool","repeat":"60","crontab":"","once":false,"x":136.23333740234375,"y":1031.63330078125,"wires":[[]]},{"id":"e290d3b3.e1957","type":"websocket out","z":"a489267c.ceed7","name":"","server":"5505308.835115","client":"","x":1485.2333984375,"y":997.8999938964844,"wires":[]},{"id":"b4e7b689.84957","type":"switch","z":"a489267c.ceed7","name":"Via trigger or POST","property":"trigger","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"false","outputs":2,"x":1260.2333984375,"y":1038.0999450683594,"wires":[["e290d3b3.e1957"],["d2dd73d0.66aa48"]]},{"id":"320c73cc.0cae2c","type":"comment","z":"a489267c.ceed7","name":"Link to 'get event' for updates","info":"Enable this link to have continuous updates to event. Causes a lot Cloudant API calls","x":151.23333740234375,"y":989.36669921875,"wires":[]},{"id":"cdd05f2b.c6bb58","type":"comment","z":"a489267c.ceed7","name":"Trigger","info":"","x":1434.36669921875,"y":957.8332824707031,"wires":[]},{"id":"d2a1a19b.c00a9","type":"comment","z":"a489267c.ceed7","name":"POST","info":"","x":1439.1666259765625,"y":1069.8999938964844,"wires":[]},{"id":"ecc68ac4.97a69","type":"switch","z":"a489267c.ceed7","name":"","property":"topic","propertyType":"msg","rules":[{"t":"neq","v":"''","vt":"str"},{"t":"eq","v":"''","vt":"str"}],"checkall":"false","outputs":2,"x":461.2333679199219,"y":842.8999938964844,"wires":[["ad1fc84.c8c2c38","522ab81d.6ffe1"],["9ce1793.9c75588"]]},{"id":"9ce1793.9c75588","type":"debug","z":"a489267c.ceed7","name":"No event","active":true,"console":"false","complete":"topic","x":663.2333984375,"y":938.6999206542969,"wires":[]},{"id":"c3855a7c.505a","type":"inject","z":"a489267c.ceed7","name":"Trigger update","topic":"","payload":"","payloadType":"str","repeat":"","crontab":"","once":true,"x":201.36668395996094,"y":72.36666870117188,"wires":[["4156957b.e5fafc"]]},{"id":"4156957b.e5fafc","type":"function","z":"a489267c.ceed7","name":"parse VCAP_SERVICES","func":"// Obtaining Cloudant credentials from VCAP_SERVICES\n\nvar cloudant_creds = global.get(\"VCAP_SERVICES\")['cloudantNoSQLDB'][0].credentials;\n\nglobal.set(\"cloudant_user\",cloudant_creds.username);\nglobal.set(\"cloudant_password\",cloudant_creds.password);\nglobal.set(\"cloudant_host\",cloudant_creds.host);\n","outputs":"0","noerr":0,"x":505.3666534423828,"y":72.83334350585938,"wires":[]},{"id":"4cd8b78a.e177e","type":"function","z":"a489267c.ceed7","name":"Set msg props","func":"var token = new Buffer(global.get(\"cloudant_user\") + ':' + global.get(\"cloudant_password\"));\ntoken = token.toString('base64');\n\nmsg.url = 'https://' + global.get(\"cloudant_host\") + '/candylogs/_design/myDesignDoc/_view/events_view?reduce=true&group_level=1';\nmsg.headers = {'Authorization':'Basic ' + token};\n\nreturn msg;","outputs":1,"noerr":0,"x":328.23333740234375,"y":638.7666625976562,"wires":[["678367bc.a0c658"]]},{"id":"ad1fc84.c8c2c38","type":"function","z":"a489267c.ceed7","name":"Set msg props","func":"var token = new Buffer(global.get(\"cloudant_user\") + ':' + global.get(\"cloudant_password\"));\ntoken = token.toString('base64');\n\nmsg.url = 'https://' + global.get(\"cloudant_host\") + '/candylogs/_design/myDesignDoc/_view/negativescore_stats?reduce=true&group_level=1&key=\\\"' + msg.topic + '\\\"';\nmsg.headers = {'Authorization':'Basic ' + token};\n\nreturn msg;","outputs":1,"noerr":0,"x":679.36669921875,"y":803.2999572753906,"wires":[["329b5efb.a35ba2"]]},{"id":"522ab81d.6ffe1","type":"function","z":"a489267c.ceed7","name":"Set msg props","func":"var token = new Buffer(global.get(\"cloudant_user\") + ':' + global.get(\"cloudant_password\"));\ntoken = token.toString('base64');\n\nmsg.url = 'https://' + global.get(\"cloudant_host\") + '/candylogs/_design/myDesignDoc/_view/positivescore_stats?reduce=true&group_level=1&key=\\\"' + msg.topic + '\\\"';\nmsg.headers = {'Authorization':'Basic ' + token};\n\nreturn msg;","outputs":1,"noerr":0,"x":680.36669921875,"y":872.2999572753906,"wires":[["4b4b3be9.0b241c"]]},{"id":"76e9304d.49a27","type":"comment","z":"a489267c.ceed7","name":"Set response code to 204","info":"","x":590.4500122070312,"y":304.74998474121094,"wires":[]},{"id":"46418583.7acdb4","type":"comment","z":"a489267c.ceed7","name":"Select event to show dashboard","info":"Enable this link to have continuous updates to event. Causes a lot Cloudant API calls","x":142.4499969482422,"y":597.0499877929688,"wires":[]},{"id":"f454d7a6.d34e08","type":"comment","z":"a489267c.ceed7","name":"Handle request & post on MQTT topic","info":"","x":156.4499969482422,"y":306.4499969482422,"wires":[]},{"id":"d145c817.b0565","type":"comment","z":"a489267c.ceed7","name":"Topic to which local flow should be subscribed","info":"","x":699.4500122070312,"y":211.4499969482422,"wires":[]},{"id":"b3bb6756.0159a8","type":"comment","z":"a489267c.ceed7","name":"Store request in DB for dashboard","info":"","x":166.4499969482422,"y":405.45001220703125,"wires":[]},{"id":"4e01cc4b.84dd14","type":"comment","z":"a489267c.ceed7","name":"Manually trigger candy disposal","info":"","x":145,"y":166.4499969482422,"wires":[]},{"id":"455d2a25.ed81cc","type":"comment","z":"a489267c.ceed7","name":"Display dashboard of selected event.","info":"","x":162.4499969482422,"y":801.3499450683594,"wires":[]},{"id":"3ab1d540.2e8a4a","type":"comment","z":"a489267c.ceed7","name":"Initialization of global vars","info":"","x":163.4499969482422,"y":32.44999694824219,"wires":[]},{"id":"9d121d84.bee988","type":"mqtt-broker","z":"","broker":"realtime.ngi.ibm.com","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"15","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"5505308.835115","type":"websocket-listener","z":"a489267c.ceed7","path":"/ws/candyreport","wholemsg":"false"}]
